{% extends 'layout.html.twig' %}

{% block title %}Affichage des profils{% endblock %}

{% block content %}
    <video autoplay muted loop id="myVideo">
        <source src="../assets/video/fondhome.mp4" type="video/mp4">
    </video>
<style>
    img{
	width: 120px;
	height: 120px;
	margin: 0.5em;
  }
</style>
<div class="cadrePr">
    <div id="soughtProfilesContainer">
        <h1>Profil trouvé</h1>
        <H2><input class="btn" type="button" value ="⬅️" id ="btnLeft"> swipe à gauche pour oublier ou à droite pour matcher <input class="btn" type="button" value ="➡️" id ="btnRight"></H2>
        <button class='signal'onclick="signalConfirm()">Signaler ce profil !</button>
    </div>
    <div id="profileCard">

        <h5 class="card-pseudo">{{ resultResearch.0.pseudo }}</h5>
        <p class="card-sentence">{{ resultResearch.0.catchPhrase }}</p>
        <p class="card-distance">Proximité du profil : {{ resultResearch.0.distance }}</p>
        <div class= "contentimg">
            <div class='hotspot '>
                <div class="button-wrap">
                {% if resultResearch.0.img_nom.0 is not empty %}              
                    <button onclick="" id='pulsebutton' class='pulsebutton'>+</button>
                {% endif %}
                     {% for img in resultResearch.0.img_nom %}
                           <div class="imgProfile"> <img class="imgcard"src="/assets/images/profile/{{ img }}" alt=""> </div>
                     {% endfor %}
               </div>
            </div>

        </div>

    </div>
    
{# to transfer twig variables into JS code by DOM #}
    <input type="hidden" id="profile" value={{resultResearch.0.id}}>
    <input type="hidden" id="pseudo" value={{resultResearch.0.pseudo}}>
    <input type="hidden" id="searchingId" value={{userId}}>
</div>
{% endblock %}

{% block javascript %}
    <script type="text/javascript">
        const profileCard = document.querySelector('#profileCard');
        const profileId = document.getElementById('profile').value;
        const profilePseudo = document.getElementById('pseudo').value;
        const searchingId = document.getElementById('searchingId').value;

        //modif° btn***************
        var btnL = document.getElementById('btnLeft'); //Left button
        var btnR = document.getElementById('btnRight'); //Right button

        btnL.addEventListener('click', leftBtn);
        btnR.addEventListener('click', rightBtn);

        function leftBtn() {
            profileCard.setAttribute("class", "leftMove");
                setTimeout(() => {
                    document.location.href="/soughtProfile/matchUpdate/"+searchingId+"/"+profileId+"/refuse";
                }, 1000);
            
        }
        
        function rightBtn() {
            profileCard.setAttribute("class", "rightMove");
                setTimeout(() => {
                        document.location.href="/soughtProfile/matchUpdate/"+searchingId+"/"+profileId+"/accept";
                }, 1000);
            
        }
        //modif° btn***************

        if (profileId != '') {
            console.log(profileId);
            console.log(searchingId);

            let startX = 0; // start position cursor
            let between = 0; // distance between start and final position cursor
            const distance = 100; // 100px swipe for action
            let directionCursor;

            // When mouse down in the card
            profileCard.addEventListener("mousedown", function(event) {
                startX = event.clientX;
                console.log(startX);
            }, false);

            // When mouse up in the card
            profileCard.addEventListener("mouseup", function(event) {
                between = event.clientX - startX;
                console.log(between);

                // direction detection
                if (between < 0) {
                    directionCursor = 'left';
                } else {
                    directionCursor = 'right';
                }

                // swipe effect
                if(Math.abs(between) >= distance && directionCursor == "left" && profileCard.getAttribute("class") != "leftMove") {
                    profileCard.setAttribute("class", "leftMove");
                    setTimeout(() => {
                        document.location.href="/soughtProfile/matchUpdate/"+searchingId+"/"+profileId+"/refuse";
                    }, 1000);
                }
                if(Math.abs(between) >= distance && directionCursor == "right" && profileCard.getAttribute("class") != "rightMove") {
                    profileCard.setAttribute("class", "rightMove");
                    setTimeout(() => {
                        document.location.href="/soughtProfile/matchUpdate/"+searchingId+"/"+profileId+"/accept";
                    }, 1000);
                }
            }, false);
        } else {
            alert('Vous avez vu tous les profils de la recherche.');
            document.location.href="/soughtProfile/selectShow/";
        }

        function signalConfirm() {
            let signalConf = confirm("Vous êtes sur le point de procéder au signalement de ce profil. Confirmez-vous ce signalement ?");
            if (signalConf) {
                document.location.href="/contact/signal/"+profileId+"/"+profilePseudo;
            }
        }
    
    var pulsebutton = document.getElementById('pulsebutton');
    var imgcards = document.getElementsByClassName('imgcard');

    pulsebutton.addEventListener('click',function(){
        
        for(var card of imgcards){
            card.style.display = 'block';
        }
    });
    </script>
{% endblock %}
